import random

# Paste the same modulus n from the challenge
n = 10205316970729431639485797664559886873490701487420041461102004580735751585751742938892976099986403177553363193830393487376567969420541261258134979327616363126253347148610544049807204226284930907503420405166209168541128632688637445870726287383056390377377382107622861504746212131179321468457103686904634978985262225083923899729078173292553918759616384301941301278845655112236714906572052945789912210749004588396399367890793347769585000314877970596365280369362958611301633074434160115833714459835933860197771690614293763100020927442209269135680658111369923029908840001532934157556701107140402652365541506235916261071723

# Number of pairs to generate (300+ recommended)
pair_count = 1000

precomputed = {}

while len(precomputed) < pair_count:
    x = random.randint(2, n - 1)
    y = pow(x, 2, n)
    if y not in precomputed:
        precomputed[y] = x

# Save the pairs to precomputed_pairs.py
with open("precomputed_pairs.py", "w") as f:
    f.write("precomputed = {\n")
    for y, x in precomputed.items():
        f.write(f"    {y}: {x},\n")
    f.write("}\n")

print(f"[+] Saved {len(precomputed)} (y, x) pairs to precomputed_pairs.py")
